"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var axios=_interopDefault(require("axios")),faker=_interopDefault(require("faker")),generate=_interopDefault(require("nanoid/generate"));class Bird{constructor(){this.request=axios.create({baseURL:"https://api.birdapp.com",headers:{"Device-id":faker.random.uuid(),platform:"android","App-Version":"4.42.0.5"}}),this.accessToken=null,this.request.interceptors.request.use(e=>(Object.assign(e.headers,{Authorization:`Bird ${this.accessToken}`}),e),e=>Promise.reject(e))}setAccessToken(e){this.accessToken=e}generateEmail(){return`${generate("1234567890abcdefghijklmnopqrstuvwxyz_.-",12)}@${generate("1234567890abcdefghijklmnopqrstuvwxyz",10)}.com`}async login(){try{let e=await this.request({method:"POST",url:"/user/login",data:{email:this.generateEmail()},responseType:"json"});return this.setAccessToken(e.data.token),e.data}catch(e){return console.log("error with login",e),e}}async getScootersNearby(e,t,r=500){try{return(await this.request({method:"GET",url:"/bird/nearby",params:{latitude:e,longitude:t,radius:r},headers:{Location:JSON.stringify({latitude:e,longitude:t,altitude:500,accuracy:100,speed:-1,heading:-1})},responseType:"json"})).data.birds}catch(e){return console.log("error with getScootersNearby",e),e}}}module.exports=Bird;
